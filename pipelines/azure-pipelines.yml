# Export workflow pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest
steps:
- bash: |
    echo "##vso[task.setvariable variable=source_environment_hostname]`yq -e ".tenant.hostname" configs/dev.yml`"
    echo "##vso[task.setvariable variable=source_environment_port]`yq -e ".tenant.port" configs/dev.yml`"
    echo "##vso[task.setvariable variable=exporter_user]`yq -e ".tenant.exporter_username" configs/dev.yml`"
    echo "##vso[task.setvariable variable=source_type]`yq -e ".tenant.type" configs/dev.yml`"
    echo "##vso[build.updatebuildnumber]$(Build.BuildNumber)-$(projectName)"
    echo $(System.DefaultWorkingDirectory)
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Get Environment Tenant Details'

- script: |
    echo $(source_environment_hostname)
    echo $(source_environment_port)
    echo $(exporter_user)
    echo $(source_type)
    PROJECTNAME=$(perl -MURI::Escape -e 'print uri_escape($ARGV[0]);' "$PROJECTNAME")
    echo ${PROJECTNAME}
    echo ${WORKFLOWID}
    LOCAL_DEV_URL=https://$(exporter_user):$(exporter_password)@$(source_environment_hostname):$(source_environment_port)
    echo ${LOCAL_DEV_URL}
    EXPORT_URL=${LOCAL_DEV_URL}/apis/v1/rest/projects/${PROJECTNAME}/workflows/${WORKFLOWID}/export
    echo ${EXPORT_URL}
    echo ${PWD}
    curl  --location --request POST ${EXPORT_URL} \
    --header 'Content-Type: application/json' \
    --header 'Accept: application/json' \
    --data-raw '{
    "name": "Workflow_A",
    "description": "Something"
    }'
  displayName: 'Export Workflow'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
