# Testing pipeline

trigger:
- main

pool:
  vmImage: ubuntu-latest
resources:
  pipelines:
  - pipeline: play
    source: synchronize_FeatureBranch
    trigger: true
    
  - pipeline: dev
    source: sychronizeToDEV
    trigger: true

  repositories:
  - repository: projectRepo
    type: github
    endpoint: github
    name: $(repoPath)
    ref: $(branch)
steps:
- checkout: projectRepo
  submodules: "true"
  persistCredentials: "true"
  clean: "true"
  path: $(repoName)
- checkout: self
  submodules: "true"
  persistCredentials: "true"
  clean: "true"
  path: self
  
- bash: |
    pwd
    cd ../self
    pwd
    source=$(echo $(resources.triggeringAlias))
    echo ${source}
    if [ -z "$source" ]; then
      source=$(echo $(environment))
      echo ${source}
    else
      echo ${source}
    fi

    ls -ltr
    echo "##vso[task.setvariable variable=source_environment_hostname]`yq -e ".tenant.hostname" configs/${source}.yml`"
    echo "##vso[task.setvariable variable=source_environment_port]`yq -e ".tenant.port" configs/${source}.yml`"
    echo "##vso[task.setvariable variable=admin_user]`yq -e ".tenant.admin_username" configs/${source}.yml`"
    echo "##vso[task.setvariable variable=source_type]`yq -e ".tenant.type" configs/${source}.yml`"
    repoName=$(perl -MURI::Escape -e 'print uri_escape($ARGV[0]);' "$(repoName)")
    echo $(repoName)
    echo "##vso[build.updatebuildnumber]$(Build.BuildNumber)-$(repoName)"
    echo $(System.DefaultWorkingDirectory)
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Get Environment Tenant Details'

- script: |
    cd ../$(repoName)
    pwd
    ls -ltr
    newman run ./resources/test/wmio_test.json -e ./resources/test/environments/$(resources.triggeringAlias).json --reporters cli,junit --reporter-junit-export $(System.DefaultWorkingDirectory)/$(source_type)/results/junitReport.xml
    ls -ltr $(System.DefaultWorkingDirectory)/$(source_type)/results/
  displayName: 'Run newman'
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)/$(source_type)/results'
    failTaskOnFailedTests: true
    testRunTitle: '$(source_type) Test Run'